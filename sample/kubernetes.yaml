kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-emerg-pod-scaler
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get","watch","list","create","update","patch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get","update"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-emerg-pod-scaler
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-emerg-pod-scaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-emerg-pod-scaler
subjects:
  - kind: ServiceAccount
    name: kube-emerg-pod-scaler
    namespace: default
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-emerg-pod-scaler
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      name: kube-emerg-pod-scaler
      labels:
        app: kube-emerg-pod-scaler
    spec:
      serviceAccountName: kube-emerg-pod-scaler
      containers:
        - image: masahata/kube-emerg-pod-scaler:latest
          imagePullPolicy: Always
          name: kube-emerg-pod-scaler
          args:
            - "-unhealthyBorderSec=300"
            - "-unhealthyRateForScale=60"
            - "-regularMonitoring=true"
            - "-regularMonitorTarget=my-deployment1,my-deployment2"
            - "-monitorIntervalSec=120"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
